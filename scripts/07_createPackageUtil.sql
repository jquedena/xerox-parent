spool 07_createPackageUtil.log

CREATE OR REPLACE PACKAGE FATCA.PKG_UTIL IS
  PROCEDURE SP_ALTER_CHARACTER_SESSION;
  PROCEDURE SP_REGISTRAR_INFO(P_DESCRIPCION VARCHAR2, P_CUENTAS_ID NUMBER, P_ACCIONISTAS_ID NUMBER, P_ID_PROCESO NUMBER, P_PERIODO_ID NUMBER, P_USUARIO VARCHAR2);
  PROCEDURE SP_VERIFICAR_ARCHIVO(P_TABLA VARCHAR2, P_ID_PROCESO_AUTOMATICO NUMBER, P_EXISTE OUT NUMBER);
  FUNCTION SF_TO_NUMBER(P_VALOR VARCHAR2) RETURN NUMBER;
  FUNCTION SF_VALIDAR_TEXTO(P_TEXT VARCHAR2) RETURN VARCHAR2;
END PKG_UTIL;
/

CREATE OR REPLACE PACKAGE BODY FATCA.PKG_UTIL IS

  PROCEDURE SP_ALTER_CHARACTER_SESSION AS
  BEGIN
    EXECUTE IMMEDIATE('ALTER SESSION SET NLS_NUMERIC_CHARACTERS = ''.,''');
  EXCEPTION
  WHEN OTHERS THEN
    PKG_UTIL.SP_REGISTRAR_INFO(SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || 'SP_ALTER_CHARACTER_SESSION', NULL, NULL, NULL, NULL, 'FATCA');
    COMMIT;
  END SP_ALTER_CHARACTER_SESSION;

  PROCEDURE SP_REGISTRAR_INFO(P_DESCRIPCION VARCHAR2, P_CUENTAS_ID NUMBER, P_ACCIONISTAS_ID NUMBER, P_ID_PROCESO NUMBER, P_PERIODO_ID NUMBER, P_USUARIO VARCHAR2) AS
  BEGIN
    INSERT INTO FATCA.LOG (ID, MENSAJE, ESTADO, USUARIO_CREACION, FECHA_CREACION, CUENTAS_ID, ACCIONISTAS_ID, PROCESO_ID, PERIODO_ID)
    VALUES (SQ_LOG.NEXTVAL, P_DESCRIPCION, 1, P_USUARIO, SYSDATE, P_CUENTAS_ID, P_ACCIONISTAS_ID, P_ID_PROCESO, P_PERIODO_ID);
  END SP_REGISTRAR_INFO;

  PROCEDURE SP_VERIFICAR_ARCHIVO(P_TABLA VARCHAR2, P_ID_PROCESO_AUTOMATICO NUMBER, P_EXISTE OUT NUMBER) AS
    CONSULTA VARCHAR2(2000) := '';
  BEGIN
    P_EXISTE := 0;
    CONSULTA := 'SELECT COUNT(1) FROM (SELECT * FROM FATCA.' || P_TABLA || ' WHERE ROWNUM = 1) A';

    EXECUTE IMMEDIATE CONSULTA INTO P_EXISTE;
  EXCEPTION
  WHEN OTHERS THEN
    P_EXISTE := 0;
    -- DBMS_OUTPUT.PUT_LINE(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || '. TABLA: ' || P_TABLA || ':SP_VERIFICAR_ARCHIVO:' || P_ID_PROCESO_AUTOMATICO);
  END SP_VERIFICAR_ARCHIVO;

  FUNCTION SF_TO_NUMBER(P_VALOR VARCHAR2)
  RETURN NUMBER AS
    NUMERO NUMBER;
    TOTALCARACTERES INT;
  BEGIN
    TOTALCARACTERES := LENGTH ( TRIM ( TRANSLATE ( P_VALOR, ' +-.0123456789', ' ' ) ) );
    IF TOTALCARACTERES IS NULL THEN
      NUMERO := TO_NUMBER( NVL(TRIM( P_VALOR ) , 0.00 ) ) / 100; -- to_char(213123.1234, '999999999999.00')
    ELSE
      NUMERO := NULL;
    END IF;

    RETURN NUMERO;
  EXCEPTION
  WHEN OTHERS THEN
    RETURN NULL;
  END SF_TO_NUMBER;

  FUNCTION SF_VALIDAR_TEXTO(P_TEXT VARCHAR2)
  RETURN VARCHAR2 AS
    V_TEXT VARCHAR2(4000);
  BEGIN
    V_TEXT := REPLACE(P_TEXT, 'Ñ', CHR(38) || 'NTILDE;');
    V_TEXT := REPLACE(P_TEXT, 'Á', CHR(38) || 'AACUTE;');
    V_TEXT := REPLACE(P_TEXT, 'É', CHR(38) || 'EACUTE;');
    V_TEXT := REPLACE(P_TEXT, 'Í', CHR(38) || 'IACUTE;');
    V_TEXT := REPLACE(P_TEXT, 'Ó', CHR(38) || 'OACUTE;');
    V_TEXT := REPLACE(P_TEXT, 'Ú', CHR(38) || 'UACUTE;');
    RETURN V_TEXT;
  END SF_VALIDAR_TEXTO;
END PKG_UTIL;
/

spool off
